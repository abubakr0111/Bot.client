import requests
import time
import threading
from flask import Flask
import os

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# --- Telegram Bot Setup ---
TOKEN = '8003016348:AAGlIdYJaNXUdibbJgr5G6CwoSpEnWEsMlE'

cached_rate = None
last_fetched = 0

main_menu = ReplyKeyboardMarkup(
    [['ü§ñ –û –Ω–∞—Å', 'üí± –ö—É—Ä—Å'], ['‚úÖ AML –ø—Ä–æ–≤–µ—Ä–∫–∞', 'üõ† –°–≤—è–∑–∞—Ç—å—Å—è']],
    resize_keyboard=True
)

start_text = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Mosca!

üìç –ú–æ—Å–∫–≤–∞, –ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è 12, –ë–∞—à–Ω—è –§–µ–¥–µ—Ä–∞—Ü–∏—è. –í–æ—Å—Ç–æ–∫, —ç—Ç–∞–∂ 11
üìÖ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –≤–∞—Å 24/7. –ë–µ–∑ –æ–±–µ–¥–∞ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö.
üíµ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ —Ä—É–±–ª–∏.
üíπ –°–∞–º—ã–π –Ω–∏–∑–∫–∏–π –∫—É—Ä—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É USDT –∏ –ª—É—á—à–∏–π –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ USDT –≤ –ú–æ—Å–∫–≤–µ.
ü§ë –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –∫–æ–º–∏—Å—Å–∏–π –Ω–∞ –ø–æ–∫—É–ø–∫—É –∏ –ø—Ä–æ–¥–∞–∂—É USDT

–î–ª—è –ø–æ–∫—É–ø–∫–∏ USDT –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω"
"""

def get_usdt_rub_rate():
    global cached_rate, last_fetched
    now = time.time()
    if cached_rate is not None and (now - last_fetched) < 60:
        return cached_rate
    try:
        response = requests.get('https://api.coingecko.com/api/v3/simple/price?ids=tether&vs_currencies=rub')
        if response.status_code != 200:
            print(f"[HTTP Error]: {response.status_code}")
            return cached_rate
        data = response.json()
        rate = data.get('tether', {}).get('rub')
        if rate is not None:
            cached_rate = rate
            last_fetched = now
        return rate
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫—É—Ä—Å–∞]: {e}")
        return cached_rate

# --- Telegram Handlers ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(start_text, reply_markup=main_menu)

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.message.text

    if msg == 'ü§ñ –û –Ω–∞—Å':
        await update.message.reply_text("""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã!
üí∞ –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –æ–±–º–µ–Ω–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –±–æ–ª–µ–µ 3—Ö –ª–µ—Ç.
üìÖ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –≤–∞—Å 24/7.
üíµ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ —Ä—É–±–ª–∏.
üíπ –£ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å USDT –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏ –ø–æ —Å–∞–º–æ–º—É –ª—É—á—à–µ–º—É –∫—É—Ä—Å—É –≤ –ú–æ—Å–∫–≤–µ.  
–ö–æ–º–∏—Å—Å–∏—è 3$ –∑–∞ –≤—ã–≤–æ–¥ USDT –≤ —Å–µ—Ç–∏ Tron.

–ù–∞—à –∞–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, –ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è 12, –ë–∞—à–Ω—è –§–µ–¥–µ—Ä–∞—Ü–∏—è. –í–æ—Å—Ç–æ–∫, —ç—Ç–∞–∂ 11

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ""")

    elif msg == 'üí± –ö—É—Ä—Å':
        rate = get_usdt_rub_rate()
        if rate:
            await update.message.reply_text(f"""–ö—É—Ä—Å USDT –∫ RUB —Å–µ–π—á–∞—Å –ø—Ä–∏–º–µ—Ä–Ω–æ:

–ö—É–ø–∏—Ç—å 1 USDT = {rate:.2f} RUB  
–ü—Ä–æ–¥–∞—Ç—å 1 USDT = {rate - 1:.2f} RUB  (–ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 1 —Ä—É–±–ª—å –Ω–∏–∂–µ –ø–æ–∫—É–ø–∫–∏)

*–¥–∞–Ω–Ω—ã–π –∫—É—Ä—Å —è–≤–ª—è–µ—Ç—Å—è –±–∏—Ä–∂–µ–≤—ã–º –∏ –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É.

–ö–æ–º–∏—Å—Å–∏—è 3$ –∑–∞ –≤—ã–≤–æ–¥ USDT –≤ —Å–µ—Ç–∏ Tron.

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω" """)
        else:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    elif msg == '‚úÖ AML –ø—Ä–æ–≤–µ—Ä–∫–∞':
        await update.message.reply_text("üîé –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")

    elif msg == 'üõ† –°–≤—è–∑–∞—Ç—å—Å—è':
        await update.message.reply_text("""–ù–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –Ω–∞ —Å–≤—è–∑–∏ 24/7 –∏ –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.

–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏ –Ω–∞–ø–∏—à–∏—Ç–µ ‚Äî @Dolar_exchange_bot

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω"
""")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.", reply_markup=main_menu)

# --- Telegram Bot Runner ---
def run_telegram_bot():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), message_handler))
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

# --- Flask Stub for Render Web Service ---
flask_app = Flask(__name__)

@flask_app.route('/')
def home():
    return 'üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. Render –¥–æ–≤–æ–ª–µ–Ω.'

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    bot_thread = threading.Thread(target=run_telegram_bot)
    bot_thread.start()

    # –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ (Render —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–π –ø–æ—Ä—Ç!)
    port = int(os.environ.get('PORT', 10000))
    flask_app.run(host='0.0.0.0', port=port)
