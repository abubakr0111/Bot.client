from flask import Flask
import asyncio
import threading
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import Update

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
flask_app = Flask(__name__)

@flask_app.route("/")
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é üí•")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞
def run_telegram_bot():
    asyncio.set_event_loop(asyncio.new_event_loop())
    loop = asyncio.get_event_loop()

    # –°–æ–∑–¥–∞—ë–º Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token("YOUR_BOT_TOKEN").build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling –≤–Ω—É—Ç—Ä–∏ event loop
    loop.run_until_complete(application.run_polling())

# –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_telegram_bot).start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä
    flask_app.run(host="0.0.0.0", port=10000)
